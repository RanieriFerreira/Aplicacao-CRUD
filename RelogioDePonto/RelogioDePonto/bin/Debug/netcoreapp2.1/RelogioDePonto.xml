<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RelogioDePonto</name>
    </assembly>
    <members>
        <member name="M:RelogioDePonto.Controllers.FuncionariosController.Post(RelogioDePonto.Modelos.Funcionario)">
            <summary>
                Cria projeto.
            </summary>
            <remarks>
                Os status de um funcionario podem ser:
                0-Inativo
                1-Ativo
                2-Férias
                3-Desligado
            </remarks>
            <param name="funcionario">Entidade que deseja criar</param>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="400">Parametros inválidos</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.FuncionariosController.Get">
            <summary>
                Busca todos os funcionários.
            </summary>
            <returns>Retorna todos os funcionarios cadastrados no banco.</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.FuncionariosController.Get(System.Int32)">
            <summary>
                Busca funcionário por CPF.
            </summary>
            <param name="cpf">CPF do funcionário que deseja procurar.</param>
            <returns>Retorna o projeto cadastrados no banco, cujo Id é igual ao que foi passado.</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="400">Parametros inválidos</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.FuncionariosController.GetPagedAndOrdered(System.String,System.Int32,System.Int32)">
            <summary>
                Paginação de funcionários.
            </summary>
            <remarks>
             Tipos de ordenação:
                - Nome : Ordenação crescente por nome
                - nome_desc: Ordenação decrescente por nome
                - status_desc: Ordenação decrescente por status
                - default: Ordenação crescente por status
            </remarks>
            <param name="order">Tipo de orderação</param>
            <param name="number">Número da página</param>
            <param name="size">Quantidade de funcionários por página</param>
            <returns>Retorna os funcioários em paginas e ordenados.</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="400">Parametros inválidos</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.FuncionariosController.Delete(System.Int32,RelogioDePonto.Modelos.Funcionario)">
            <summary>
                Deleta o projeto com o mesmo Id que foi passado.
            </summary>
            <param name="cpf">CPF do funcionário que deseja deletar</param>
            <param name="funcionario">Funcionario que deseja deletar</param>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ProjetosController.Post(RelogioDePonto.Modelos.Projeto)">
            <summary>
                Cria projeto.
            </summary>
            <remarks>
                Os status de um projeto podem ser:
                0-Inativo
                1-Ativo
                2-Em espera
                3-Finalizado
            </remarks>
            <param name="projeto">Entidade que deseja criar</param>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="400">Parametros inválidos</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ProjetosController.Get">
            <summary>
                Busca todos os projetos.
            </summary>
            <returns>Retorna todos os projetos cadastrados no banco</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ProjetosController.Get(System.Int32)">
            <summary>
                Busca projeto por Id.
            </summary>
            <param name="id">Id do projeto que deseja procurar</param>
            <returns>Retorna o projeto cadastrados no banco, cujo Id é igual ao que foi passado.</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="400">Parametros inválidos</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ProjetosController.Search(System.String)">
            <summary>
                Busca projetos pelo nome.
            </summary>
            <remarks>
                Busca todos os projetos, cujo nome, começam com o parametro passado.
            </remarks>
            <param name="nome">Inicio do nome de um projeto que deseja buscar</param>
            <returns>Retorna todos os projetos cadastrados no banco com o inicio do nomecorrespondente ao que foi passado.</returns>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ProjetosController.Delete(System.Int32,RelogioDePonto.Modelos.Projeto)">
            <summary>
                Deleta o projeto com o mesmo Id que foi passado.
            </summary>
            <param name="id">Id do projeto que deseja deletar</param>
            <param name="projeto">Projeto que deseja deletar</param>
            <response code="200">Se a operação foi feita com sucesso</response>
            <response code="500">Problema de acesso ao servidor</response>  
        </member>
        <member name="M:RelogioDePonto.Controllers.ValuesController.Post(System.String)">
             <summary>
                 Creates a TodoItem.
             </summary>
             <remarks>
                 Sample request:
            
                 POST /Todo
                 {
                     "value": string
                 }
             </remarks>
             <param name="value"></param>
             <returns>A newly created TodoItem</returns>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response>            
        </member>
        <member name="M:RelogioDePonto.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            Deletes a specific TodoItem.
            </summary>
            <param name="id"></param>   
        </member>
    </members>
</doc>
